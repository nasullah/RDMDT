import rdmdt.Patient
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_RDMDT_patient_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/patient/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: patientInstance, field: 'givenName', 'error'))
printHtmlPart(1)
invokeTag('message','g',6,['code':("patient.givenName.label"),'default':("Given Name")],-1)
printHtmlPart(2)
invokeTag('textField','g',8,['class':("form-control"),'name':("givenName"),'value':(patientInstance?.givenName)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'givenName', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'familyName', 'error'))
printHtmlPart(5)
invokeTag('message','g',14,['code':("patient.familyName.label"),'default':("Family Name")],-1)
printHtmlPart(2)
invokeTag('textField','g',16,['class':("form-control"),'name':("familyName"),'value':(patientInstance?.familyName)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'familyName', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'nhsNumber', 'error'))
printHtmlPart(6)
invokeTag('message','g',22,['code':("patient.nhsNumber.label"),'default':("Nhs Number")],-1)
printHtmlPart(2)
invokeTag('textField','g',24,['class':("form-control"),'name':("nhsNumber"),'value':(patientInstance?.nhsNumber)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'nhsNumber', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'mrn', 'error'))
printHtmlPart(7)
invokeTag('message','g',30,['code':("patient.mrn.label"),'default':("Mrn")],-1)
printHtmlPart(2)
invokeTag('textField','g',32,['class':("form-control"),'name':("mrn"),'value':(patientInstance?.mrn)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'mrn', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'dateOfBirth', 'error'))
printHtmlPart(8)
invokeTag('message','g',38,['code':("patient.dateOfBirth.label"),'default':("Date Of Birth")],-1)
printHtmlPart(2)
invokeTag('datePicker','bs',40,['name':("dateOfBirth"),'precision':("day"),'value':(patientInstance?.dateOfBirth),'default':("none"),'noSelection':(['': ''])],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'dateOfBirth', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'gender', 'error'))
printHtmlPart(9)
invokeTag('message','g',46,['code':("patient.gender.label"),'default':("Gender")],-1)
printHtmlPart(2)
invokeTag('select','g',48,['class':("many-to-one"),'id':("gender"),'name':("gender.id"),'from':(rdmdt.Gender.list()),'optionKey':("id"),'value':(patientInstance?.gender?.id),'noSelection':(['null': ''])],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'gender', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'ethnicity', 'error'))
printHtmlPart(10)
invokeTag('message','g',54,['code':("patient.ethnicity.label"),'default':("Ethnicity")],-1)
printHtmlPart(2)
invokeTag('select','g',56,['class':("many-to-one"),'id':("ethnicity"),'name':("ethnicity.id"),'from':(rdmdt.Ethnicity.list()),'optionKey':("id"),'value':(patientInstance?.ethnicity?.id),'noSelection':(['null': ''])],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'ethnicity', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'otherEthnicity', 'error'))
printHtmlPart(11)
invokeTag('message','g',62,['code':("patient.otherEthnicity.label"),'default':("Other Ethnicity")],-1)
printHtmlPart(2)
invokeTag('textField','g',64,['class':("form-control"),'name':("otherEthnicity"),'value':(patientInstance?.otherEthnicity)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'otherEthnicity', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'availableForOAR', 'error'))
printHtmlPart(12)
invokeTag('message','g',70,['code':("patient.availableForOAR.label"),'default':("Available For OAR")],-1)
printHtmlPart(2)
invokeTag('checkBox','bs',72,['name':("availableForOAR"),'value':(patientInstance?.availableForOAR)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'availableForOAR', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'isProband', 'error'))
printHtmlPart(13)
invokeTag('message','g',78,['code':("patient.isProband.label"),'default':("Is Proband")],-1)
printHtmlPart(2)
invokeTag('checkBox','bs',80,['name':("isProband"),'value':(patientInstance?.isProband)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'isProband', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'ege', 'error'))
printHtmlPart(14)
invokeTag('message','g',86,['code':("patient.ege.label"),'default':("Ege")],-1)
printHtmlPart(2)
invokeTag('field','g',88,['class':("form-control"),'name':("ege"),'type':("number"),'value':(patientInstance.ege)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'ege', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'referralRecord', 'error'))
printHtmlPart(15)
invokeTag('message','g',94,['code':("patient.referralRecord.label"),'default':("Referral Record")],-1)
printHtmlPart(16)
invokeTag('select','g',96,['class':("many-to-one"),'id':("referralRecord"),'name':("referralRecord.id"),'from':(rdmdt.ReferralRecord.list()),'optionKey':("id"),'value':(patientInstance?.referralRecord?.id)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: patientInstance, field: 'referralRecord', 'error'))
printHtmlPart(4)
expressionOut.print(hasErrors(bean: patientInstance, field: 'relationshipTo', 'error'))
printHtmlPart(17)
invokeTag('message','g',102,['code':("patient.relationshipTo.label"),'default':("Relationship To")],-1)
printHtmlPart(18)
expressionOut.print(hasErrors(bean: patientInstance, field: 'relationshipTo', 'error'))
printHtmlPart(19)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1464082041723L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
