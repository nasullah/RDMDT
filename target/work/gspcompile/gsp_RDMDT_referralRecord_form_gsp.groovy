import rdmdt.RelationshipType
import  rdmdt.Clinician
import  rdmdt.ReferralRecord
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_RDMDT_referralRecord_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/referralRecord/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'clinician', 'error'))
printHtmlPart(1)
if(true && (referralRecordInstance?.clinician?.id)) {
printHtmlPart(2)
invokeTag('message','g',12,['code':("referralRecord.clinician.label"),'default':("Clinician")],-1)
printHtmlPart(3)
invokeTag('select','g',14,['class':("form-control"),'id':("clinician"),'name':("clinician.id"),'from':(rdmdt.Clinician.list()),'optionKey':("id"),'required':(""),'value':(referralRecordInstance?.clinician?.id)],-1)
printHtmlPart(4)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'clinician', 'error'))
printHtmlPart(5)
}
else {
printHtmlPart(6)
invokeTag('autoComplete','richui',20,['class':("form-control"),'name':("clinicianName"),'action':(createLinkTo('dir': 'clinician/findClinician')),'value':(referralRecordInstance?.clinician),'onItemSelect':("callClinician(id)")],-1)
printHtmlPart(7)
invokeTag('hiddenField','g',21,['id':("clinician"),'name':("clinician"),'value':(referralRecordInstance?.clinician?.id)],-1)
printHtmlPart(8)
}
printHtmlPart(9)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'uniqueRef', 'error'))
printHtmlPart(10)
invokeTag('message','g',34,['code':("referralRecord.uniqueRef.label"),'default':("Unique Ref")],-1)
printHtmlPart(11)
invokeTag('textField','g',36,['class':("form-control"),'name':("uniqueRef"),'value':(referralRecordInstance?.uniqueRef),'required':("")],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'uniqueRef', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'nhsNumber', 'error'))
printHtmlPart(14)
invokeTag('textField','g',46,['class':("form-control"),'name':("nhsNumberProband"),'value':(""),'required':("")],-1)
printHtmlPart(15)
expressionOut.print(hasErrors(bean: patientInstance, field: 'gender', 'error'))
printHtmlPart(16)
invokeTag('message','g',53,['code':("patient.gender.label"),'default':("Gender of the proband")],-1)
printHtmlPart(17)
invokeTag('select','g',55,['class':("form-control"),'id':("genderProband"),'name':("genderProband"),'from':(rdmdt.Gender.list()),'optionKey':("id"),'value':(patientInstance?.gender?.id),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: patientInstance, field: 'gender', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: patientInstance, field: 'ethnicity', 'error'))
printHtmlPart(18)
invokeTag('message','g',63,['code':("patient.ethnicity.label"),'default':("Ethnicity of the proband")],-1)
printHtmlPart(11)
invokeTag('select','g',65,['class':("form-control"),'id':("ethnicityProband"),'name':("ethnicityProband"),'from':(rdmdt.Ethnicity.list()),'required':(""),'optionKey':("id"),'value':(patientInstance?.ethnicity?.id),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: patientInstance, field: 'ethnicity', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: patientInstance, field: 'otherEthnicity', 'error'))
printHtmlPart(19)
invokeTag('message','g',73,['code':("patient.otherEthnicity.label"),'default':("Other ethnicity of the proband")],-1)
printHtmlPart(17)
invokeTag('textField','g',75,['class':("form-control"),'name':("otherEthnicityProband"),'value':(patientInstance?.otherEthnicity)],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: patientInstance, field: 'otherEthnicity', 'error'))
printHtmlPart(20)
invokeTag('field','g',87,['class':("form-control"),'name':("ageProband"),'type':("number"),'value':("")],-1)
printHtmlPart(21)
invokeTag('select','g',96,['class':("form-control"),'id':("egeUnitProband"),'name':("egeUnitProband"),'from':(rdmdt.EgeUnit.list()),'optionKey':("id"),'value':(""),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(22)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'disorderName', 'error'))
printHtmlPart(23)
invokeTag('message','g',109,['code':("referralRecord.disorderName.label"),'default':("Disorder name")],-1)
printHtmlPart(11)
invokeTag('textField','g',111,['class':("form-control"),'name':("disorderName"),'value':(referralRecordInstance?.disorderName),'required':("")],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'disorderName', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'causativeVariantAffect', 'error'))
printHtmlPart(24)
invokeTag('message','g',119,['code':("referralRecord.causativeVariantAffect.label"),'default':("Causative variant affect")],-1)
printHtmlPart(17)
invokeTag('textField','g',121,['class':("form-control"),'name':("causativeVariantAffect"),'value':(referralRecordInstance?.causativeVariantAffect)],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'causativeVariantAffect', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'knownGeneVariant', 'error'))
printHtmlPart(25)
invokeTag('message','g',129,['code':("referralRecord.knownGeneVariant.label"),'default':("Known gene variant")],-1)
printHtmlPart(17)
invokeTag('textField','g',131,['class':("form-control"),'name':("knownGeneVariant"),'value':(referralRecordInstance?.knownGeneVariant)],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'knownGeneVariant', 'error'))
printHtmlPart(26)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'ageOfSymptoms', 'error'))
printHtmlPart(27)
invokeTag('message','g',141,['code':("referralRecord.ageOfSymptoms.label"),'default':("Age of onset of symptoms in the proband")],-1)
printHtmlPart(17)
invokeTag('field','g',143,['class':("form-control"),'name':("ageOfSymptoms"),'type':("number"),'value':(referralRecordInstance.ageOfSymptoms)],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'ageOfSymptoms', 'error'))
printHtmlPart(28)
invokeTag('select','g',153,['class':("form-control"),'id':("symptomEgeUnit"),'name':("symptomEgeUnit.id"),'from':(rdmdt.EgeUnit.list()),'optionKey':("id"),'value':(""),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(29)
invokeTag('field','g',168,['class':("form-control"),'name':("cDetails0"),'type':("text"),'value':("")],-1)
printHtmlPart(30)
invokeTag('field','g',188,['class':("form-control"),'name':("cDetails1"),'type':("text"),'value':("")],-1)
printHtmlPart(31)
invokeTag('field','g',197,['class':("form-control"),'name':("cDetails2"),'type':("text"),'value':("")],-1)
printHtmlPart(32)
invokeTag('field','g',206,['class':("form-control"),'name':("cDetails3"),'type':("text"),'value':("")],-1)
printHtmlPart(33)
invokeTag('field','g',215,['class':("form-control"),'name':("cDetails4"),'type':("text"),'value':("")],-1)
printHtmlPart(34)
invokeTag('field','g',224,['class':("form-control"),'name':("cDetails5"),'type':("text"),'value':("")],-1)
printHtmlPart(35)
invokeTag('field','g',233,['class':("form-control"),'name':("cDetails6"),'type':("text"),'value':("")],-1)
printHtmlPart(36)
invokeTag('field','g',248,['class':("form-control"),'name':("unrelatedFeature0"),'type':("text"),'value':("")],-1)
printHtmlPart(37)
invokeTag('field','g',268,['class':("form-control"),'name':("unrelatedFeature1"),'type':("text"),'value':("")],-1)
printHtmlPart(38)
invokeTag('field','g',277,['class':("form-control"),'name':("unrelatedFeature2"),'type':("text"),'value':("")],-1)
printHtmlPart(39)
invokeTag('field','g',286,['class':("form-control"),'name':("unrelatedFeature3"),'type':("text"),'value':("")],-1)
printHtmlPart(40)
invokeTag('field','g',295,['class':("form-control"),'name':("unrelatedFeature4"),'type':("text"),'value':("")],-1)
printHtmlPart(41)
invokeTag('field','g',304,['class':("form-control"),'name':("unrelatedFeature5"),'type':("text"),'value':("")],-1)
printHtmlPart(42)
invokeTag('field','g',313,['class':("form-control"),'name':("unrelatedFeature6"),'type':("text"),'value':("")],-1)
printHtmlPart(43)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'geneticTestingOnProband', 'error'))
printHtmlPart(44)
invokeTag('message','g',324,['code':("referralRecord.geneticTestingOnProband.label"),'default':("Genetic Testing On Proband")],-1)
printHtmlPart(17)
invokeTag('textField','g',326,['class':("form-control"),'name':("geneticTestingOnProband"),'value':(referralRecordInstance?.geneticTestingOnProband)],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'geneticTestingOnProband', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'otherTestingOnProband', 'error'))
printHtmlPart(45)
invokeTag('message','g',334,['code':("referralRecord.otherTestingOnProband.label"),'default':("Other Testing On Proband")],-1)
printHtmlPart(17)
invokeTag('textField','g',336,['class':("form-control"),'name':("otherTestingOnProband"),'value':(referralRecordInstance?.otherTestingOnProband)],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'otherTestingOnProband', 'error'))
printHtmlPart(46)
if(true && (referralRecordInstance?.pedigree == null)) {
printHtmlPart(47)
}
printHtmlPart(48)
invokeTag('checkBox','bs',365,['name':("breastAndOrOvarianCancerPaternal"),'value':(referralRecordInstance?.paternal?.first()?.breastAndOrOvarianCancer),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(49)
invokeTag('checkBox','bs',374,['name':("colorectalCancerPaternal"),'value':(referralRecordInstance?.paternal?.first()?.colorectalCancer),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(50)
invokeTag('checkBox','bs',383,['name':("ischaemicHeartDiseaseOrStrokePaternal"),'value':(referralRecordInstance?.paternal?.first()?.ischaemicHeartDiseaseOrStroke),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(51)
invokeTag('checkBox','bs',392,['name':("endocrineTumoursPaternal"),'value':(referralRecordInstance?.paternal?.first()?.endocrineTumours),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(52)
invokeTag('checkBox','bs',407,['name':("breastAndOrOvarianCancerMaternal"),'value':(referralRecordInstance?.maternal?.first()?.breastAndOrOvarianCancer),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(49)
invokeTag('checkBox','bs',416,['name':("colorectalCancerMaternal"),'value':(referralRecordInstance?.maternal?.first()?.colorectalCancer),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(50)
invokeTag('checkBox','bs',425,['name':("ischaemicHeartDiseaseOrStrokeMaternal"),'value':(referralRecordInstance?.maternal?.first()?.ischaemicHeartDiseaseOrStroke),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(51)
invokeTag('checkBox','bs',434,['name':("endocrineTumoursMaternal"),'value':(referralRecordInstance?.maternal?.first()?.endocrineTumours),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(53)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'furtherDetailsOfHistory', 'error'))
printHtmlPart(54)
invokeTag('message','g',443,['code':("referralRecord.furtherDetailsOfHistory.label"),'default':("Further Details of History")],-1)
printHtmlPart(17)
invokeTag('textArea','g',445,['class':("form-control"),'name':("furtherDetailsOfHistory"),'value':(referralRecordInstance?.furtherDetailsOfHistory),'rows':("4"),'cols':("40")],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'furtherDetailsOfHistory', 'error'))
printHtmlPart(55)
invokeTag('select','g',461,['class':("form-control"),'id':("relationshipToProband1"),'name':("relationshipToProband1"),'from':(RelationshipType.list()),'optionKey':("id"),'value':(""),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(56)
invokeTag('checkBox','bs',470,['name':("availableForOAR1"),'value':(referralRecordInstance?.patients?.availableForOAR),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(57)
invokeTag('select','g',479,['class':("form-control"),'id':("ethnicity1"),'name':("ethnicity1"),'from':(rdmdt.Ethnicity.list()),'optionKey':("id"),'value':(""),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(58)
invokeTag('select','g',490,['class':("form-control"),'id':("relationshipToProband2"),'name':("relationshipToProband2"),'from':(RelationshipType.list()),'optionKey':("id"),'value':(""),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(56)
invokeTag('checkBox','bs',499,['name':("availableForOAR2"),'value':(referralRecordInstance?.patients?.availableForOAR),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(57)
invokeTag('select','g',508,['class':("form-control"),'id':("ethnicity2"),'name':("ethnicity2"),'from':(rdmdt.Ethnicity.list()),'optionKey':("id"),'value':(""),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(59)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'isAnySampleFromDeceasedIndividuals', 'error'))
printHtmlPart(60)
invokeTag('message','g',521,['code':("referralRecord.isAnySampleFromDeceasedIndividuals.label"),'default':("Is any of the samples are taken from deceased individuals")],-1)
printHtmlPart(17)
invokeTag('checkBox','bs',523,['name':("isAnySampleFromDeceasedIndividuals"),'value':(referralRecordInstance?.isAnySampleFromDeceasedIndividuals),'onLabel':("Yes"),'offLabel':("No")],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'isAnySampleFromDeceasedIndividuals', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'numberOfSamplesForSeq', 'error'))
printHtmlPart(61)
invokeTag('message','g',531,['code':("referralRecord.numberOfSamplesForSeq.label"),'default':("Number of samples proposed for sequencing")],-1)
printHtmlPart(17)
invokeTag('field','g',533,['class':("form-control"),'name':("numberOfSamplesForSeq"),'type':("number"),'value':(referralRecordInstance.numberOfSamplesForSeq)],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'numberOfSamplesForSeq', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'samplesForSeqDetails', 'error'))
printHtmlPart(62)
invokeTag('message','g',541,['code':("referralRecord.samplesForSeqDetails.label"),'default':("Details of samples proposed for sequencing")],-1)
printHtmlPart(17)
invokeTag('field','g',543,['class':("form-control"),'name':("samplesForSeqDetails"),'type':("text"),'value':(referralRecordInstance.samplesForSeqDetails)],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'samplesForSeqDetails', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'numberOfSampleOtherRel', 'error'))
printHtmlPart(63)
invokeTag('message','g',551,['code':("referralRecord.numberOfSampleOtherRel.label"),'default':("Number of Sample Other Relatives")],-1)
printHtmlPart(17)
invokeTag('field','g',553,['class':("form-control"),'name':("numberOfSampleOtherRel"),'type':("number"),'value':(referralRecordInstance.numberOfSampleOtherRel)],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'numberOfSampleOtherRel', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'consanguinityEvidence', 'error'))
printHtmlPart(64)
invokeTag('message','g',561,['code':("referralRecord.consanguinityEvidence.label"),'default':("Consanguinity Evidence")],-1)
printHtmlPart(17)
invokeTag('select','g',563,['class':("form-control"),'id':("consanguinityEvidence"),'name':("consanguinityEvidence.id"),'from':(rdmdt.Consanguinity.list()),'optionKey':("id"),'value':(referralRecordInstance?.consanguinityEvidence?.id),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'consanguinityEvidence', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'penetrance', 'error'))
printHtmlPart(65)
invokeTag('message','g',571,['code':("referralRecord.penetrance.label"),'default':("Penetrance")],-1)
printHtmlPart(17)
invokeTag('select','g',573,['class':("form-control"),'id':("penetrance"),'name':("penetrance.id"),'from':(rdmdt.Penetrance.list()),'optionKey':("id"),'value':(referralRecordInstance?.penetrance?.id),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'penetrance', 'error'))
printHtmlPart(66)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'referralStatus', 'error'))
printHtmlPart(67)
invokeTag('message','g',587,['code':("referralRecord.referralStatus.label"),'default':("Referral Status")],-1)
printHtmlPart(11)
invokeTag('select','g',589,['class':("form-control"),'id':("referralStatus"),'name':("referralStatus.id"),'from':(rdmdt.ReferralStatus.list().sort{it.id}),'optionKey':("id"),'required':(""),'value':(referralRecordInstance?.referralStatus?.id)],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'referralStatus', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'program', 'error'))
printHtmlPart(68)
invokeTag('message','g',597,['code':("referralRecord.program.label"),'default':("Program")],-1)
printHtmlPart(17)
invokeTag('select','g',599,['class':("form-control"),'id':("program"),'name':("program.id"),'from':(rdmdt.Program.list()),'optionKey':("id"),'value':(referralRecordInstance?.program?.id),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'program', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'note', 'error'))
printHtmlPart(69)
invokeTag('message','g',607,['code':("referralRecord.note.label"),'default':("Note")],-1)
printHtmlPart(17)
invokeTag('textArea','g',609,['class':("form-control"),'name':("note"),'value':(referralRecordInstance?.note),'rows':("4"),'cols':("40")],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'note', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'assignedTo', 'error'))
printHtmlPart(70)
invokeTag('message','g',617,['code':("referralRecord.assignedTo.label"),'default':("Assigned To")],-1)
printHtmlPart(17)
invokeTag('select','g',619,['class':("form-control"),'id':("assignedTo"),'name':("assignedTo.id"),'from':(rdmdt.Clinician.list()),'optionKey':("id"),'value':(referralRecordInstance?.assignedTo?.id),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'assignedTo', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'assignedOn', 'error'))
printHtmlPart(71)
invokeTag('message','g',627,['code':("referralRecord.assignedOn.label"),'default':("Assigned on")],-1)
printHtmlPart(17)
invokeTag('datePicker','bs',629,['name':("assignedOn"),'precision':("day"),'value':(referralRecordInstance?.assignedOn),'default':("none"),'noSelection':(['': ''])],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'assignedOn', 'error'))
printHtmlPart(26)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'proposedDiagnosis', 'error'))
printHtmlPart(72)
invokeTag('message','g',639,['code':("referralRecord.proposedDiagnosis.label"),'default':("Proposed Diagnosis")],-1)
printHtmlPart(17)
invokeTag('select','g',641,['class':("form-control"),'id':("proposedDiagnosis"),'name':("proposedDiagnosis.id"),'from':(rdmdt.OMIM.list()),'optionKey':("id"),'value':(referralRecordInstance?.proposedDiagnosis?.id),'noSelection':(['':'- Choose -'])],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'proposedDiagnosis', 'error'))
printHtmlPart(13)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'meetingDate', 'error'))
printHtmlPart(73)
invokeTag('message','g',649,['code':("referralRecord.meetingDate.label"),'default':("Meeting Date")],-1)
printHtmlPart(17)
invokeTag('datePicker','bs',651,['name':("meetingDate"),'precision':("day"),'value':(referralRecordInstance?.meetingDate),'default':("none"),'noSelection':(['': ''])],-1)
printHtmlPart(12)
expressionOut.print(hasErrors(bean: referralRecordInstance, field: 'meetingDate', 'error'))
printHtmlPart(74)
invokeTag('field','g',663,['class':("form-control"),'name':("extraTestsRequested"),'type':("text"),'value':("")],-1)
printHtmlPart(75)
invokeTag('datePicker','bs',672,['name':("requestedDate"),'precision':("day"),'value':(""),'default':("none"),'noSelection':(['': ''])],-1)
printHtmlPart(76)
invokeTag('javascript','g',678,['plugin':("jquery"),'library':("jquery")],-1)
printHtmlPart(77)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1464257274402L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
